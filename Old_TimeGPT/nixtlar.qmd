
---
title: "A First Look at TimeGPT"
author: "Joseph Rickert"
date: 2024-12-13
description: ""
image: ""
image-alt: ""
categories: ""
editor: source
---


See the `nixtlar` [API guide](https://cran.r-project.org/web/packages/nixtlar/vignettes/get-started.html) for options


```{r}
library(nixtlar)
nixtla_client_setup(api_key = "nixak-pClLnoPc6lVWa4SitSyVo8ExtbPAkcnQblW6n3LiFW4QEqe3PT8bC9WlqLJNgpfzPHvNrEB92x5rJKqV")
```



```{r}
library(tidyverse)
library(forecast)
library(xts)
```

## The Electricity Forecast example

```{r}
df <- nixtlar::electricity
dim(df)
glimpse(df)

```


```{r}
df2 <- df |> mutate( time = as.POSIXct(ds, format = "%Y-%m-%d %H:%M:%S")) |> 
  group_by(unique_id)
head(df2)
```




```{r}
p <- df2 |> ggplot(aes(x = time, y = y, color = unique_id)) +
           geom_line() + facet_wrap(~unique_id, scales = "free")
p
```

Forecast

```{r}
nixtla_client_fcst <- nixtla_client_forecast(df, h = 8, level = c(80,95))
#> Frequency chosen: h
head(nixtla_client_fcst)
```

```{r}
saveRDS(nixtla_client_fcst, "nixtla_client_fcst.rds")
nixtla_client_fcst <- readRDS("nixtla_client_fcst.rds")
```



Plot

```{r}
nixtla_client_plot(df, nixtla_client_fcst, max_insample_length = 200)
```


```{r}
ncf_df <-  nixtla_client_fcst |> mutate( time = as.POSIXct(ds, format = "%Y-%m-%d %H:%M:%S")) |> group_by(unique_id)
head(ncf_df)

```


```{r}
pf1 <- ncf_df |> ggplot(aes(x = time, y = TimeGPT, color = unique_id)) +
           geom_line() + facet_wrap(~unique_id, scales = "free")
pf1
```




```{r}

ncf_df <- nixtla_client_fcst |>  group_by(unique_id)

names(ncf_df) <- c("unique_id", "ds", "TimeGPT",  "lon", "loe", "hie", "hin")
  
```

```{r}
pf <- ncf_df |> ggplot(aes(x = ds, y = TimeGPT, color = unique_id)) +
           geom_line() +
           geom_ribbon(aes(ymin=lon, ymax=hin), linetype=2, alpha=0.1) +
           facet_wrap(~unique_id, scales = "free") 
pf
```



### BE Forecast



```{r}

BEdf <- ungroup(df2) |> filter(unique_id == "BE")|> select(time,y)
head(BEdf)

```

Auto forecast

```{r}
BE <- as.xts(BEdf)

BE_fore <- BE |> 
  auto.arima() |>
  # number of periods to forecast
  forecast(h =8 , level = 95)

```

```{r}
BE_fore |> autoplot()


```



```{r}
tgpt_fore <- ncf_df |> ungroup() |> 
          filter(unique_id == "BE") |> 
          select(ds, TimeGPT,lon,hin) |>
          rename(mean = TimeGPT, up = hin, lo = lon) |>
          mutate(method = "TimeGPT")
head(tgpt_fore)
```

```{r}
mean <- as.vector(BE_fore$mean)
lo <- as.vector(BE_fore$lower)
up <- as.vector(BE_fore$upper)
method <- rep("arima",8)
ds <- pre_df$ds
arima_fore <- data_frame(ds, mean,lo, up, method)
arima_fore
```

```{r}
BE_fore_df <- bind_rows(tgpt_fore,arima_fore)
```



```{r}
pfore <- BE_fore_df |> ggplot(aes(x = ds, y = mean, group = method,
                                  color = method)) +
         geom_line()
pfore
```

